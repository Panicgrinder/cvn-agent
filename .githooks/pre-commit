#!/usr/bin/env bash
# Pre-commit Hook: Verhindert Commits ohne aktuellen DONELOG-Eintrag,
# wenn Code unter app/, scripts/ oder utils/ geändert wurde.
set -euo pipefail

# Sammle geänderte Dateien im Index (staged)
CHANGED=$(git diff --cached --name-only | tr '\n' ' ')

# Wenn nichts geändert ist, einfach durchlassen
if [ -z "$CHANGED" ]; then
  exit 0
fi

# Prüfen, ob relevante Pfade betroffen sind
if echo "$CHANGED" | grep -Eq '^(app/|scripts/|utils/)' ; then
  if ! grep -q "$(date +%Y)" docs/DONELOG.txt ; then
    echo "\n✖ DONELOG fehlt oder hat keinen Eintrag für dieses Jahr."
    echo "   Bitte 'python scripts/append_done.py "Kurzbeschreibung"' ausführen und erneut committen." >&2
    exit 1
  fi
fi

# Markdownlint für geänderte Markdown-Dateien (README.md, docs/*.md etc.)
MD_FILES=$(git diff --cached --name-only --diff-filter=ACMRTUXB | grep -Ei '\.md$' || true)
if [ -n "${MD_FILES}" ]; then
  if command -v markdownlint >/dev/null 2>&1; then
    echo "→ Prüfe Markdown mit markdownlint"
    # Lint
    if ! markdownlint ${MD_FILES} -c .markdownlint.json; then
      echo "⚠ markdownlint hat Probleme gefunden. Versuche automatische Korrektur …"
      # Optionaler Auto-Fix; danach Dateien erneut zum Commit hinzufügen
      if markdownlint --fix ${MD_FILES} -c .markdownlint.json; then
        echo "✔ Fixes angewendet. Bitte Änderungen prüfen und erneut committen."
        git add ${MD_FILES} || true
      else
        echo "✖ markdownlint --fix fehlgeschlagen. Bitte manuell beheben (siehe VS Code Tasks)." >&2
      fi
      exit 1
    fi
  else
    echo "[WARN] markdownlint nicht gefunden. Überspringe Markdown-Prüfung. Installieren: 'npm install -g markdownlint-cli'" >&2
  fi
fi

exit 0
